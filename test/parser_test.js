// Generated by CoffeeScript 1.3.3
(function() {
  var Parser, assert, expect, fs, libpath, should, _ref;

  require('coffee-script');

  fs = require('fs');

  _ref = require('chai'), assert = _ref.assert, expect = _ref.expect, should = _ref.should;

  libpath = process.env['ID3_COV'] ? '../lib-cov' : '../src';

  Parser = require(libpath + '/parser').Parser;

  describe('Short ID3v2.2 audio', function() {
    var parser;
    parser = null;
    beforeEach(function(done) {
      return fs.readFile('test/mj_short.mp3', function(err, data) {
        if (err) {
          return done(err);
        }
        parser = new Parser(data);
        parser.parse();
        return done();
      });
    });
    it('is ID3v2.2', function() {
      expect(parser.version).to.equal(2);
      expect(parser.frameIdSize).to.equal(3);
      expect(parser.frameSizeSize).to.equal(3);
      return expect(parser.frameFlagsSize).to.equal(0);
    });
    it('has finished parsing', function() {
      return expect(parser.parsed).to.be["true"];
    });
    it('has some tags', function() {
      var ids, tags;
      ids = parser.ids;
      tags = parser.tags;
      expect(ids).to.include('TAL');
      return expect(tags).to.have.property('album');
    });
    return it('is "HIStory Past, Present and Future, Book 1"', function() {
      var tags;
      tags = parser.tags;
      return expect(tags['album']).to.equal('HIStory Past, Present and Future, Book 1');
    });
  });

}).call(this);
